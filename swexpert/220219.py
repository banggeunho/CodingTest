# 코딩테스트 대비 기초 문제 풀이 32일차
# Date : 2022. 02. 17.
# 구현 문제 풀이

#-------------------------****----------------------------------
# N의 범위가 500인 경우 : 시간 복잡도가 O(N^3)인 알고리즘을 설계
# N의 범위가 2,000인 경우 : 시간 복잡도가 O(N^2)인 알고리즘을 설계
# N의 범위가 100,000인 경우 : 시간 복잡도가 O(NlogN)인 알고리즘을 설계
# N의 범위가 10,000,000인 경우 : 시간 복잡도가 O(N)인 알고리즘을 설계
#-------------------------****----------------------------------

# 5688 세제곱근을 찾아라
for tc in range(1, int(input())+1):
  n = int(input())
  # n-1의 세제곱근을 구하여 그것보다 큰것부터 보면 되겠다 인수형으로 바꿔서 ㅇㅈ?
  solve = False

  if round(n**(1/3), 1) - int(round(n**(1/3), 1)) == 0:
    x = int(round(n**(1/3), 1))
    if pow(x, 3) == n:
      solve = True

  if not solve:
    print(f'#{tc} {-1}')
  
  else:
    print(f'#{tc} {int(x)}')
